import tkinter as tk
from tkinter import messagebox, filedialog
import requests
from PIL import Image, ImageTk
from io import BytesIO

# âœ… Your Giphy API Key
API_KEY = "tKtWOOpwQxWKkQMrmBJ392W0jImdd6XD"
SEARCH_URL = "https://api.giphy.com/v1/gifs/search"

def search_gif():
    query = entry.get().strip()
    if not query:
        messagebox.showerror("Error", "Please enter a search keyword")
        return

    params = {
        "api_key": API_KEY,
        "q": query,
        "limit": 1
    }

    try:
        response = requests.get(SEARCH_URL, params=params)
        response.raise_for_status()
        data = response.json()

        if data["data"]:
            gif_url = data["data"][0]["images"]["original"]["url"]
            show_gif(gif_url)
            download_button.config(state=tk.NORMAL)
            download_button.gif_url = gif_url
        else:
            messagebox.showinfo("No Results", "No GIFs found for this keyword.")
    except Exception as e:
        messagebox.showerror("API Error", str(e))

def show_gif(gif_url):
    try:
        response = requests.get(gif_url)
        img_data = response.content
        img = Image.open(BytesIO(img_data))
        img.thumbnail((300, 300))
        img_tk = ImageTk.PhotoImage(img)

        gif_label.config(image=img_tk)
        gif_label.image = img_tk
    except Exception as e:
        messagebox.showerror("Image Error", f"Failed to load preview: {e}")

def download_gif():
    gif_url = download_button.gif_url
    file_path = filedialog.asksaveasfilename(defaultextension=".gif", filetypes=[("GIF files", "*.gif")])
    if file_path:
        try:
            response = requests.get(gif_url)
            with open(file_path, "wb") as f:
                f.write(response.content)
            messagebox.showinfo("Success", "GIF downloaded successfully!")
        except Exception as e:
            messagebox.showerror("Download Error", str(e))

# ---------------- GUI ----------------
root = tk.Tk()
root.title("Giphy GIF Downloader")
root.geometry("420x480")
root.configure(bg="#1e1e1e")

tk.Label(root, text="Enter Keyword:", fg="white", bg="#1e1e1e", font=("Arial", 12)).pack(pady=10)
entry = tk.Entry(root, font=("Arial", 14), width=30)
entry.pack(pady=5)

tk.Button(root, text="Search GIF", command=search_gif, font=("Arial", 12), bg="#00adb5", fg="white").pack(pady=10)

gif_label = tk.Label(root, bg="#1e1e1e")
gif_label.pack(pady=10)

download_button = tk.Button(root, text="Download GIF", state=tk.DISABLED, command=download_gif, font=("Arial", 12), bg="#393e46", fg="white")
download_button.pack(pady=20)

root.mainloop()
